version: 2

references:
  defaults: &defaults
    docker:
      - image: circleci/buildpack-deps:stretch
    environment:
      IMAGE_NAME: organization-name/project-name

jobs:
  build:
    docker:
      - image: circleci/buildpack-deps:stretch
    environment:
      IMAGE_NAME: organization-name/project-name
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker build -t $IMAGE_NAME:latest .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  tests:
    docker:
      - image: circleci/buildpack-deps:stretch
        environment:
          IMAGE_NAME: organization-name/project-name
      - image: circleci/postgres:9.6.6-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: app
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run: docker-compose -f docker-compose.test.yml up web
  release:
    docker:
      - image: circleci/buildpack-deps:stretch
    environment:
      IMAGE_NAME: organization-name/project-name
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run: |
          eval $(aws ecr get-login --region ${AWS_DEFAULT_REGION} | sed 's|https://||' | sed 's|-e none ||')
          docker tag ${IMAGE_NAME}:latest ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${AWS_RESOURCE_NAME_PREFIX_STAGING}:${CIRCLE_SHA1}
          docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${AWS_RESOURCE_NAME_PREFIX_STAGING}:${CIRCLE_SHA1}
  deploy:
    docker:
      - image: circleci/python:3.6.9-stretch
    steps:
      - run: eval $(aws ecr get-login --region ${AWS_DEFAULT_REGION} | sed 's|https://||' | sed 's|-e none ||')
      - run: sudo pip install awsebcli --upgrade
      - run:
          name: Deploying AWS ECS
          command: ecs-deploy -c ${AWS_CLUSTER_NAME} -n ${AWS_SERVICE_NAME} -i \
                ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${AWS_RESOURCE_NAME_PREFIX_LAB}:${CIRCLE_SHA1} \
                -r ${AWS_DEFAULT_REGION}
          no_output_timeout: 30m

workflows:
  version: 2
  untagged-build:
    jobs:
      - build
      - tests:
          requires:
            - build
      - release:
          requires:
            - tests
          filters:
            branches:
              only:
                - master
                - staging
  tagged-build:
    jobs:
      - deploy:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/